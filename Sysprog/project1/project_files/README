Important files:

	header.mak	for use with 'makemake > Makefile'

        input.?         sample stdin for test #?
        custs.?         customer database for test #?
        parts.?         parts database for test #?

	stdout.?	sample stdout from test #?
	stderr.?	sample stderr from test #?

	RUN		script to run project1 against input.*

You can test your program with the RUN script found here, or with commands
like these.  For example, to run test #1, Bourne-style shell (sh, bash,
dash) users would execute commands like these:

        project1 custs.1 parts.1 < input.1 > out 2> err
	diff out stdout.1
	diff err stderr.1

For C-shell users (note the use of parentheses):

	(project1 custs.1 parts.1 < input.1 > out) >& err
	diff out stdout.1
	diff err stderr.1

The RUN script automatically tests your program against all the supplied
data sets, saving your output into files named out.? and err.? for
each test.  It then uses the 'cmp' command to tell you which output
files have differences from the sample output; you can go on to use
'diff' to see these differences in detail.

The RUN script also allows you to easily test your program with an
arbitrary limit on the amount of dynamic memory that can be used.  Execute
it with a command-line argument to limit memory to that amount; e.g.,

	./RUN 1024

runs all the tests with a memory limit of 1024 bytes of allocatable
memory.

Any differences between your output and the test output should be
corrected before submitting your program.

NOTE:  These sets of test files test only some of the program's
functionality!  Be sure to exhaustively test your solution.
